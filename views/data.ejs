<!DOCTYPE html>
<html lang="en">
<%- include('./partials/head.ejs') %>

    <body>
        <%- include('./partials/nav.ejs') %>

            <div class="graph-container">
                <div id="red" class="graph-item" style=height:100%">
                    <h3 style="color: red;">COVID cases INDIA</h3>
                    <h3 id="up1" style="color: red;"></h3>
                </div>
                <div id="green" class="graph-item" style=height:100%">
                    <h3 style="color: rgb(28, 143, 5);">COVID recovered cases</h3>
                    <h3 id="up2" style="color: rgb(28, 143, 5);"></h3>
                </div>
                <div id="black" class="graph-item" style=height:100%">
                    <h3>COVID deceased cases</h3>
                    <h3 id="up3"></h3>
                </div>
                <!-- <h2 class="graph-item">COVID cases INDIA</h2>
                <h2 class="graph-item">COVID cases INDIA</h2> -->
                <div class="graph-item" style="position: relative; height:50vh">
                    <canvas id="myChart"></canvas>
                </div>
                <div class="graph-item" style="position: relative; height:50vh">
                    <canvas id="myChartA"></canvas>
                </div>
                <div class="graph-item" style="position: relative; height:50vh">
                    <canvas id="myChartB"></canvas>
                </div>
                <!-- <h2 class="graph-item">State wise Active COVID cases</h2> -->
                <div id="graph-item1" class="graph-item" style="position: relative; height:50vh">
                    <canvas id="myChart2"></canvas>
                </div>
                <div id="graph-item2" class="graph-item shr" style="position: relative; height:50vh">
                    <canvas id="myChart3"></canvas>
                </div>
                <div class="graph-item" style="position: relative; height:50vh">
                    <canvas id="myChartPi"></canvas>
                </div>
                <div id="graph-item3" class="graph-item" style="position: relative; height:50vh">
                    <canvas id="myChart4"></canvas>
                </div>
            </div>

            <%- include('./partials/footer.ejs') %>

    </body>


    <script>

        document.getElementsByClassName("graph-container").width = screen.width;
        const state = [];
        window.addEventListener('load', setup);
        setup2();
        setupA();
        setupB();
        setup3();
        setup4();
        setupPi();

        async function setup() {
            const ctx = document.getElementById('myChart').getContext('2d');
            const CovCaseIN = await getData();
            document.getElementById("up1").innerText = CovCaseIN.cases[CovCaseIN.cases.length - 1];
            document.getElementById("up2").innerText = CovCaseIN.recovered[CovCaseIN.recovered.length - 1];
            document.getElementById("up3").innerText = CovCaseIN.deceased[CovCaseIN.deceased.length - 1];
            const myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: CovCaseIN.days,
                    datasets: [
                        {
                            label: 'COVID cases INDIA',
                            data: CovCaseIN.cases,
                            fill: true,
                            borderColor: 'rgba(255, 99, 132, 1)',
                            backgroundColor: 'rgba(255, 99, 132, 0.5)',
                            borderWidth: 1,
                            borderWidth: 1,
                            pointStyle: 'dash',
                            spanGaps: true,
                            steppedLine: true
                        },
                        // {
                        //     label: 'COVID recovered INDIA',
                        //     data: CovCaseIN.recovered,
                        //     fill: 2,
                        //     // borderColor: 'rgba(255, 99, 132, 1)',
                        //     backgroundColor: 'rgba(60, 179, 113, 0.5)',
                        //     borderWidth: 1
                        // },
                        // {
                        //     label: 'COVID deceased INDIA',
                        //     data: CovCaseIN.deceased,
                        //     fill: true,
                        //     // borderColor: 'rgba(255, 99, 132, 1)',
                        //     backgroundColor: 'rgba(0, 0,255, 0.5)',
                        //     borderWidth: 1
                        // },
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: false
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                display: false
                            }
                        }]
                    }
                }
            });
        }


        async function setupA() {
            const ctxA = document.getElementById('myChartA').getContext('2d');
            const CovCaseIN = await getData();

            const myChartA = new Chart(ctxA, {
                type: 'line',

                data: {
                    labels: CovCaseIN.days,

                    datasets: [

                        {
                            label: 'COVID recovered INDIA',
                            data: CovCaseIN.recovered,
                            fill: true,
                            borderColor: 'rgba(60, 179, 113, 1)',
                            backgroundColor: 'rgba(60, 179, 113, 0.5)',
                            borderWidth: 1,
                            pointStyle: 'dash',
                            spanGaps: true,
                            steppedLine: true
                        },
                        // {
                        //     label: 'COVID deceased INDIA',
                        //     data: CovCaseIN.deceased,
                        //     fill: true,
                        //     // borderColor: 'rgba(255, 99, 132, 1)',
                        //     backgroundColor: 'rgba(0, 0,255, 0.5)',
                        //     borderWidth: 1
                        // },

                    ]
                },
                options: {
                    maintainAspectRatio: false,

                    scales: {
                        xAxes: [{

                            gridLines: {
                                display: false
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                display: false
                            }
                        }]
                    }
                }
            });
        }





        async function setupB() {
            const ctxB = document.getElementById('myChartB').getContext('2d');
            const CovCaseIN = await getData();

            const myChartB = new Chart(ctxB, {
                type: 'line',
                pointStyle: 'dash',
                data: {
                    labels: CovCaseIN.days,
                    datasets: [
                        {
                            label: 'COVID deceased INDIA',
                            data: CovCaseIN.deceased,
                            fill: true,
                            borderColor: 'rgba(0, 0,0, 1)',
                            backgroundColor: 'rgba(0, 0,0, 0.5)',
                            borderWidth: 1,
                            pointStyle: 'dash',
                            spanGaps: true,
                            steppedLine: true

                        },
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: false
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                display: false
                            }
                        }]
                    }
                }
            });
        }

        async function getData() {
            // const response = await fetch('testdata.csv');
            const response = await fetch('https://api.covid19india.org/csv/latest/case_time_series.csv');
            const data = await response.text();
            const days = [];
            const cases = [];
            const recovered = [];
            const deceased = [];
            const rows = data.split('\n').slice(1);
            rows.forEach(row => {
                const cols = row.split(',');
                days.push(cols[1]);
                cases.push(cols[3]);
                recovered.push(cols[5]);
                deceased.push(cols[7]);
            });
            return { days, cases, recovered, deceased };
        }




        async function setup2() {
            const ctx2 = document.getElementById('myChart2').getContext('2d');
            const CovCaseIN2 = await getData2();

            const myChart = new Chart(ctx2, {
                type: 'bar',
                data: {
                    labels: CovCaseIN2.state,
                    datasets: [
                        {
                            label: 'State wise COVID cases',
                            data: CovCaseIN2.activecases,
                            fill: true,
                            // borderColor: 'rgba(255, 99, 132, 1)',
                            backgroundColor: 'rgba(255, 99, 132, 0.5)',
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                }
            });
        }

        async function getData2() {
            // const response = await fetch('ZonAnn.Ts+dSST.csv');
            const response = await fetch('https://api.covid19india.org/csv/latest/state_wise.csv');
            const data = await response.text();

            const activecases = [];
            const rows = data.split('\n').slice(2);
            rows.forEach(row => {
                const cols = row.split(',');
                if (cols[7] != undefined)
                    state.push(cols[7]);
                if (cols[4] != undefined)
                    activecases.push(cols[4]);
            });
            return { state, activecases };
        }





        async function setup3() {
            const ctx3 = document.getElementById('myChart3').getContext('2d');
            const CovCaseIN3 = await getData3();

            const myChart = new Chart(ctx3, {
                type: 'line',
                data: {
                    labels: CovCaseIN3.date,
                    datasets: [
                        {
                            label: 'Vaccine in INDIA',
                            data: CovCaseIN3.doses,
                            fill: true,
                            // borderColor: 'rgba(255, 99, 132, 1)',
                            backgroundColor: 'rgba(255, 99, 132, 0.5)',
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: false
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                display: false
                            }
                        }]
                    }
                }
            });
        }

        async function getData3() {
            // const response = await fetch('ZonAnn.Ts+dSST.csv');
            const response = await fetch('https://api.covid19india.org/csv/latest/vaccine_doses_statewise.csv');
            const data = await response.text();
            const date = [];
            const doses = [];
            const rows = data.split('\n');
            const n = rows.length;
            // console.log(n);


            let cols = rows[0].split(',');
            // console.log(cols.length);
            // console.log(cols.length);
            for (let i = 1; i < cols.length; i = i + 2) {
                date.push(cols[i]);
            }
            cols = rows[n - 1].split(',');
            // console.log(cols.length);
            // console.log(cols.length);
            for (let i = 1; i < cols.length; i = i + 2) {
                doses.push(cols[i]);
            }
            //  activecases.push(cols[cols.length-1]);

            return { date, doses };
        };




        async function setup4() {
            const ctx4 = document.getElementById('myChart4').getContext('2d');
            const CovCaseIN4 = await getData4();

            const myChart = new Chart(ctx4, {
                type: 'bar',
                data: {
                    labels: state,
                    datasets: [
                        {
                            label: 'State wise Vaccine administration',
                            data: CovCaseIN4.doses,
                            fill: true,
                            // borderColor: 'rgba(255, 99, 132, 1)',
                            backgroundColor: 'rgba(255, 99, 132, 0.5)',
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                }
            });
        }

        async function getData4() {
            // const response = await fetch('ZonAnn.Ts+dSST.csv');
            const response = await fetch('https://api.covid19india.org/csv/latest/vaccine_doses_statewise.csv');
            const data = await response.text();
            const state = [];
            const doses = [];
            const rows = data.split('\n').slice(1);
            rows.forEach(row => {
                const cols = row.split(',');
                // console.log(cols.length);
                if (cols[0] != undefined && cols[0] != "Total")
                    state.push(cols[0]);
                if (cols[cols.length - 1] != undefined && cols[0] != "Total")
                    doses.push(cols[cols.length - 1]);

            });
            return { state, doses };
        }




        async function setupPi() {
            const ctxPi = document.getElementById('myChartPi').getContext('2d');
            const CovCaseINPi = await getDataPi();
            console.log(CovCaseINPi.male);
            console.log(CovCaseINPi.female);
            console.log(CovCaseINPi.other);
            const myChart = new Chart(ctxPi, {
                type: 'doughnut',
                data: {
                    labels: [
                        'Male',
                        'Female',
                        'Other'
                    ],
                    datasets: [{
                        label: 'My First Dataset',
                        data: [CovCaseINPi.male[0], CovCaseINPi.female[0], CovCaseINPi.other[0]],
                        backgroundColor: [
                            'rgb(255, 99, 132)',
                            'rgb(54, 162, 235)',
                            'rgb(255, 205, 86)'
                        ],
                        hoverOffset: 4
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                }
            });
        }

        async function getDataPi() {
            // const response = await fetch('ZonAnn.Ts+dSST.csv');
            const response = await fetch('https://api.covid19india.org/csv/latest/cowin_vaccine_data_statewise.csv');
            const data = await response.text();
            const male = [];
            const female = [];
            const other = [];
            const rows = data.split('\n').slice(1);
            // rows.forEach(row => {
            //     const cols = row.split(',');
            //     // console.log(cols.length);
            //     if (cols[0] != undefined && cols[0] != "Total")
            //         state.push(cols[0]);
            //     if (cols[cols.length - 1] != undefined && cols[0] != "Total")
            //         doses.push(cols[cols.length - 1]);

            // });
            var today = new Date();
            var dd = String(today.getDate() - 2).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
            var yyyy = today.getFullYear();

            today = dd + '/' + mm + '/' + yyyy;
            console.log(today);
            for (let i = 0; i < rows.length; i++) {
                const cols = rows[i].split(',');
                // if (cols[1] != "India" || cols[2] == " ") {
                //     console.log(cols);
                //     male.push(rows[i - 1].split(',')[7]);
                //     female.push(rows[i - 1].split(',')[8]);
                //     other.push(rows[i - 1].split(',')[9]);
                //     break;
                // }
                            
                if (cols[0] === today) {   
                    console.log(cols[0]);
                    console.log(today);
                    male.push(rows[i].split(',')[7]);
                    female.push(rows[i].split(',')[8]);
                    other.push(rows[i].split(',')[9]);
                    break;
                }

            }
            return { male, female, other };
        }

    </script>

</html>